Question 1) 
3146. Permutation Difference between two strings
https://leetcode.com/problems/permutation-difference-between-two-strings/

 (TC): O(n + m)
 (SC): O(n)

class Solution {
    public int findPermutationDifference(String s, String t) {
        int absDiff=0;
        HashMap<Character,Integer>map =new HashMap<>();
        for(int i=0;i<s.length();i++){
            map.put(s.charAt(i), i);
        }
        for(int j=0;j<t.length();j++){
            int val =map.get(t.charAt(j));
            absDiff += Math.abs(val-j);
        }
        return absDiff;
    }
}


question2 )
3147. Taking Maximum Energy from the mystic dungeon
https://leetcode.com/problems/taking-maximum-energy-from-the-mystic-dungeon/description/


//t.c- O(k*n/k) =O(n)
//s.c= O(1)

class Solution {
    public int maximumEnergy(int[] energy, int k) {
        int ans= Integer.MIN_VALUE;
        int n=energy.length-1;
        for(int i=n;i>n-k;i--){//o(k)
            int sum=0;
            for(int j=i;j>=0;j=j-k){ //n/k times
             sum+= energy[j];
             ans=Math.max(ans,sum);
            }
        }
        return ans;
    }
}

